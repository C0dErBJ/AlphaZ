buildscript {
    ext {
        kotlinVersion = '1.2.30'
        bootGralde = '2.0.0.RELEASE'
        flyway = '5.0.7'
    }
    repositories {
        maven {
            url "http://122.112.234.252:8888/nexus/content/groups/public/"
        }

        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${bootGralde}"
        classpath "gradle.plugin.com.boxfuse.client:gradle-plugin-publishing:${flyway}"
    }
}

group 'AlphaZ'
version '1.0-SNAPSHOT'

subprojects {

    ext {
        okhttp = '3.8.0'
        netty = '5.0.0.Alpha2'
        pinyin4j = '2.5.1'
        swagger = '2.8.0'
        querydslVersion = '4.1.4'
        dubboVersion = '1.0.0'
        springSecurityJwt = '1.0.8.RELEASE'
        flywayVersion = '5.0.7'
        neohtmlVersion = '1.9.22'
        junitVersion = "4.12"

    }

    repositories {
        maven {
            url "http://122.112.234.252:8888/nexus/content/groups/public/"
        }
        maven {
            url "https://repo.spring.io/snapshot"
        }
        mavenCentral()

    }

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'kotlin'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    dependencies {
        compile(
                "org.springframework.boot:spring-boot-starter-json",
                "com.fasterxml.jackson.module:jackson-module-kotlin"

        )
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
        compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
        testCompile "junit:junit:${junitVersion}"
        compile fileTree(dir: 'libs', include: ['**/*.jar', '**/*.json'])
    }
}





